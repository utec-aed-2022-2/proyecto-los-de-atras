idea 1:
    1.1 que dentro de blockchain haya un hashmap y ya no un doublelist:
        hashmap
            keyA: A
            keyB: B
            keyC: C
        - que A, B y C representen bloques y que cada bloque represente un usuario.
        - dentro de cada bloque hay X transacciones, las cuales fueron hechan de distintas personas hacia 1 persona, por ej en el bloque B(la persona B) estan las transacciones:
            M, 200, B
            L, 29, B
            O 345, B

    1.2 en bloque, organizar las transacciones con un B+Tree. ej de uso:
        - X persona es la que menos dinero le ha dado a B
        - X persona es la que más dinero le ha dado a B
        - X's personas le han dado un monto de dinero entre 30 y 200 a B 

    - contras:
        - voy a tener muchos B+tree (1 para cada usuario)
        - como los bloques estan en un hashmap, no sabré que bloque es el anterior de otro (en un hashmap no hay orden)

idea 2:
    1.1 mantener el doublelist
    1.2 lo mismo que en la idea 1 (parte 1.2)

    - contras:
        - al tener un doublelist, voy a tener que evaluar 1 por 1 para encontrar el bloque de X persona (con el hashmap es acceso directo)
        - sigo teniendo muchos B+tree

idea final:
    1.1 usar un doublelist para el blockchain (para poder hacer mejor el hasheo en cascada):
        -  [1] -> [2] -> [3] -> ... [9] -> [10] -> ...

    1.2 usar un hash para almacenar a los usuarios y su nodo del doublelist correspondiente:
        -
          fernando ->(hash)->   f3ox0 
          carlos   ->(hash)->   c8ie2

          key     | value
          -----------------
          f3ox0   | *[5]
          r3ccc   | *[9]
          ...     | ...
          c8ie2   | *[2]

          key guarda el hash del usuario X y value guarda un puntero al nodo del doublelist donde esta el bloque con
          las transacciones de tipo (X, persona random, monto, fecha). Al guardar un puntero al nodo, no tendré que
          recorrer el doublelist desde el inicio, sino iré directamente gracias al hash.

    1.3 dentro del doublelist esta el nodo del usuario X, ahi esta el bloque del usuario X. En ese bloque estan las
        transacciones, las cuales voy a guardar en un B+Tree, esto me dará acceso por rangos eficiente a las transacciones.

        -                                    [ X, A, 10, 20/11/2020 | --- ]
                                            /                        \
                                           /                          \ 
                                          /                            \  
                                         /                              \
                                        /                                \
                 [ X, M, 5, 15/09/2022 | --- ] ->  [ X, A, 10, 20/11/2020 | X, E, 70, 30/01/2021 ]